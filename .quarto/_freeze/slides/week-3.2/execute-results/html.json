{
  "hash": "3c8453fbf303420ea4569ec6cd674ae1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Sampling\ndate: today\ndate-format: long\nfooter: \"[IAFF 6501 Website](https://quant4ia.rocks/)\"\nlogo: images/iaff6501-logo.png\nformat:\n  revealjs:\n    theme: [simple, custom.scss]\n    transition: fade\n    slide-number: true\n    #multiplex: true\n    chalkboard: true\nexecute:\n  echo: false\n  message: false\n  warning: false\n  freeze: auto\n---\n\n\n## Sampling\n\n::: incremental\n- **Sampling** the act of selecting a subset of individuals, items, or data points from a larger population to estimate characteristics or metrics of the entire population\n- Versus a **census**, which involves gathering information on every individual in the population\n- Why would you want to use a sample?\n:::\n\nToday's code is [HERE](https://www.dropbox.com/scl/fo/3u8lgap6nqtcp91gmclgd/h?rlkey=wm2ey4emths9w9585gnp9fygb&dl=0)\n\n# Sampling Activity\n\n## What proportion of all milk chocolate M&Ms are blue?\n\n-   M&Ms has a precise distribution of colors that it produces in its factories\n-   M&Ms are sorted into bags in factories in a fairly random process\n-   Each bag represents a **sample** from the full **population** of M&Ms\n\n## Activity\n\n-   Get in groups of 2. Each group will have 4-5 bags of M&Ms.\n-   Keep the contents of each bag separate, and do not eat (yet!)\n-   Open up your first bag of M&Ms: calculate the proportion of the M&Ms that are blue. **Write this down.** What is your best guess (your **estimate**) for the proportion of all M&Ms that are blue?\n\n## Activity\n\n-   Do the same as above for the rest of your bags (you should have 4-5 **estimates** written down)\n-   Draw a histogram of your estimates (by hand)\n-   Add your estimates to this [Google Sheet](https://docs.google.com/spreadsheets/d/136wGKZOnwOdo3O-4bUfF_TWKBCAWQUCyiVKSY4HyYAw/edit?usp=sharing)\n-   Add your estimates to the class histogram on the whiteboard\n\n## Let's Analyze the Data\n\n<br>\n\nWe will use the `googlesheets4` package to pull the data into R so be sure to install it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"googlesheets4\")\n\nlibrary(tidyverse)\nlibrary(googlesheets4)\n\ngs4_deauth() # to signify no authorization required\n\nmnm_data <- read_sheet(\"https://docs.google.com/spreadsheets/d/136wGKZOnwOdo3O-4bUfF_TWKBCAWQUCyiVKSY4HyYAw/edit#gid=0\")\n\nglimpse(mnm_data)\n```\n:::\n\n\n\n## Calculate Some Summary Stats\n\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmnm_data |>\n  summarize(\n    mean_blue = mean(proportion_blue),\n    median_blue = median(proportion_blue),\n    sd_blue = sd(proportion_blue)\n  )\n```\n:::\n\n## Now Let's Make a Histogram \n\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mnm_data, aes(x = proportion_blue)) +\n  geom_histogram(fill = \"steelblue\") +\n  labs(\n    title = \"Percentage of Blue M&Ms\",\n    x = \"Proportion Blue\",\n    y = \"Count\"\n  )\n```\n:::\n\n\n## Discuss with Neighbor \n\n-   What is the histogram/distribution showing?\n-   Based on the histogram on the board, what is your answer to the question of what proportion of all milk chocolate M&Ms are blue? Why do you give that answer?\n-   Why do some bag of M&Ms have proportions of blues that are higher and lower than the number you gave above?\n-   How do our estimates relate to the actual percentage of blue M&Ms manufactured (ask Google or ChatGPT)\n\n## What did we just do?\n\n::: incremental\n-   We wanted to say something about the **population** of M&Ms\n-   The **parameter** we care about is the proportion of M&Ms that are blue\n-   It would be impossible to conduct a **census** and to calculate the parameter\n-   We took a **sample** from the population and calculated a **sample statistic**\n-   **statistical inference:** act of making a guess about a **population** using information from a **sample**\n:::\n\n## What have we just done?\n\n::: incremental\n-   We completed this task many times\n-   This produced a **sampling distribution** of our **estimates**\n-   There is a distribution of estimates because of **sampling variability** \n-   Due to random chance, one estimate from one sample can differ from another\n-   These are foundational ideas for statistical inference that we are going to keep building on\n:::\n\n# Zooming Out\n\n## Target Population\n\nIn data analysis, we are usually interested in saying something about a **Target Population.**\n\n::: incremental\n-   What proportion of adult Russians support the war in Ukraine?\n    -   Target population: adult Russians (age 18+)\n-   How many US college students check social media during their classes?\n    -   Target population: US college students\n-   What percentage of M&Ms are blue?\n    -   Target population: all of the M&Ms\n:::\n\n## Sample\n\n<br>\n\nIn many instances, we have a **Sample**\n\n-   We cannot talk to every Russian\n-   We cannot talk to all college students\n-   We cannot count all of the M&Ms\n\n## Parameters vs Statistics\n\n<br>\n\n::: incremental\n-   The **parameter** is the value of a calculation for the entire target population\n-   The **statistic** is what we calculate on our sample\n    -   We calculate a statistic in order to say something about the parameter\n:::\n\n## Inference\n\n<br>\n\n::: incremental\n-   **Inference**--The act of \"making a guess\" about some unknown\n-   **Statistical inference**--Making a good guess about a population from a sample\n-   **Causal inference**--Did X cause Y? [topic for later classes]\n:::\n\n",
    "supporting": [
      "week-3.2_files/figure-revealjs"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}