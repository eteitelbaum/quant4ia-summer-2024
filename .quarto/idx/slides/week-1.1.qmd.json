{"title":"Quantitative Analysis for IA Practitioners","markdown":{"yaml":{"title":"Quantitative Analysis for IA Practitioners","subtitle":"IAFF 6501","footer":"[IAFF 6501 Website](https://quant4ia.rocks)","logo":"images/iaff6501-logo.png","format":{"revealjs":{"theme":["simple","custom.scss"],"transition":"fade","slide-number":true,"chalkboard":true}},"execute":{"echo":false,"message":false,"warning":false,"freeze":"auto"}},"headingText":"Welcome!","containsRefs":false,"markdown":"\n\n\n<br>\n\n| Professor Teitelbaum [ejt\\@gwu.edu](mailto:ejt@gwu.edu)\n| Office Hours: Tuesdays, 3:00-5:00 p.m.\n| Monroe Hall Rm 411 or online\n| Go to my [calendly page](https://calendly.com/emmanuel-teitelbaum) to sign up for a slot\n\n## Teaching Assistants\n\n<br>\n\n| Yuchen Zhao\n| email: [yuchen.zhao1\\@gwu.edu](mailto:yuchen.zhao1@gmail.com)\n| Office Hours: Wednesdays, 1:00 - 3:00 p.m.\n| Location TBD\n\n<br>\n\n| Jeffrey Kuo\n| email: [jeffkuo\\@gwu.edu](mailto:jeffkuo@gmail.com)\n| Office Hours: Wedensdays, 4:00-6:00 p.m.\n| Gelman Library\n\n## Why Take this Course?\n\n<br>\n\n-   International Affairs is changing!\n-   Data is everywhere and it is changing the way government works\n-   You will be a better consumer of data and research\n-   You can be a \"bridge builder\" between traditional analysts and data scientists on your team\n\n## Data Informed Dipomacy\n\n<br>\n\n> Data is a critical instrument of diplomacy. When our workforce has data at their fingertips they are better prepared to engage diplomatically, manage effectively, and lead globally.\n\n| Secretary of State Anthony Blinken, 2022[^1]\n\n[^1]: <https://www.state.gov/data/>\n\n## State Department Goals\n\n<br>\n\n::: columns\n::: {.column width=\"50%\"}\n[![](images/enterprise-strategy.png)](https://www.state.gov/wp-content/uploads/2021/09/Reference-EDS-Accessible.pdf)\n:::\n\n::: {.column width=\"50%\"}\n- Cultivate a Data Culture\n- Accelerate Decisions through Analytics\n- Establish Mission-Driven Data Management\n- Enhance Enterprise Data Governance\n:::\n:::\n\n## Open Goverment Data Act (2018)\n\n- Requires government data assets to be published as machine-readable data in open formats \n- Requires Chief Data Officers (CDOs) to be appointed at federal agencies\n- Requires CDOs to develop and maintain comprehensive data inventories\n- Has led to a proliferation of data science roles in the federal government\n\n::: aside\n<https://crsreports.congress.gov/product/pdf/IF/IF12299>\n:::\n\n## Open Source Intelligence \n\n<br>\n\n- More than 90% of the analysis in the intelligence community is based on open source information\n- Government agencies use a lot of the same datasets that we will be using in this class\n- Yet the OSINT community has only begun to scratch the surface of what is possible with data science\n\n## \n\n<br>\n\n![](images/MLP.jpg)\n\n::: notes\nMLP's digital tools provide fine-grained data tracking and forecasting major political events across nearly 60 countries by continuously scraping and process tens of millions of articles published by more than 300 local, regional, and international news sources in more than 30 languages. This infrastructure provides up-to-date data on recent and historical trends in civic space and foreign influence and builds forecasting models that learn from historical patterns to predict how conditions are likely to change in the near future.\n:::\n\n## \n\n<br>\n\n![](images/CSO.jpg)\n\n## Monitoring, Evaluation and Learning\n\n::: {.incremental}\n- Another important use of data in international affairs is monitoring, evaluation and learning (MEL)\n- MEL is a process that helps organizations track and assess the performance of their programs\n- MEL is a key component of [USAID](https://www.usaid.gov/activity-monitoring-evaluation-and-learning-mel-plan), the [World Bank](https://www.worldbank.org/en/research/dime/research) and other agencies \n- A major component of MEL is the use of randomized control trials (RCTs) and other designs, which you will learn about in this class\n:::\n\n## Skills/Knowledge You Will Gain\n\n<br>\n\n::: incremental\n1.  R coding skills (and RStudio), with focus on \"tidy\" approach and reproducible research\n2.  Quarto (html documents, PDFs, presentations, websites, books, blogs, ...)\n3.  How to access and \"clean\" data so that you can analyze it\n4.  When you hear terms like \"machine learning\", you'll have some sense of what people are talking about\n:::\n\n## Structure of the Course\n\n::: incremental\n1.  Data Visualization\n    -   Summarizing and communicating effectively with data\n2.  Statistical Inference\n    -   Making rigorous conclusions from data\n3.  Modeling\n    -   For prediction and forecasting\n    -   For drawing causal conclusions\n:::\n\n## How do I get an \"A\"? (requirements)\n\n<br>\n\n-   Weekly quizzes (20 percent)\n-   3 Data Analysis Assignments (45 percent; 15 percent each)\n-   Final Project (20 percent)\n\n## Course Website\n\n<br>\n\n-   <https://quant4ia.rocks>\n-   Let's take a quick tour!\n\n## Install R and RStudio\n\n<br>\n\n-   If you haven't already...\n-   Go to the RStudio [download page](https://posit.co/download/rstudio-desktop/)\n-   Download R and then RStudio\n\n## Set up RStudio {.smaller}\n\n<br>\n\n-   Go to Tools\\>Global Options\n-   Under Code, enable native pipe operator (`|>`)\n-   Under Appearance, choose a theme\n-   Configure panes\n    -   Go to Pane Layout\n    -   Move Source, Console, etc. to preferred positions\n\n## Illustration\n\n![](images/rstudio-setup.gif){fig-align=\"center\"}\n\n```{r}\n#| label: timer1\n\nlibrary(countdown)\ncountdown(minutes = 3, \n          id = \"timer1\", \n          top = \"0%\",\n          right = \"5%\",\n          color_border = \"#fff\",\n          color_text = \"#fff\",\n          color_running_background = \"#42affa\",\n          color_running_text = \"black\",\n          color_finished_background = \"#E5D19D\",\n          color_finished_text = \"#00264A\")\n```\n\n## Install key packages\n\n-   Install the Tidyverse group of packages from the console\n    -   `install.packages(\"tidyverse\")`\n-   Install `devtools`\n    -   `install.packages(\"devtools\")`)\n-   Install tinytex (for PDF rendering)\n    -   Go to your terminal and type `quarto install tinytex`\n\n## Illustration\n\n![](images/install-packages.gif){fig-align=\"center\"}\n\n```{r}\n#| label: timer2\n\ncountdown(minutes = 3, \n          id = \"timer2\",\n          top = \"0%\",\n          right = \"5%\")\n```\n\n## Let's get going . . .\n\n<br>\n\nYour first data visualizations...\n\n(and making sure we have R and RStudio installed and ready to roll)\n\n## Example: Make a map!\n\n```{r}\n#| label: leaflet_map\n\nlibrary(leaflet)\nleaflet() %>% \n  addTiles() %>%   # Add default OpenStreetMap map tiles\n  addMarkers(lat = 38.90243843683386, lng =  -77.0443814477152, \n             label = \"Elliott School of International Affairs\")\n```\n\n## Example: Plotting Democracy Over Time\n\n```{r}\n#| label: plot_democracy\n\n# For nice colors that work for color blind\ncbPalette <- c(\"#999999\", \"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\", \"#0072B2\", \"#D55E00\", \"#CC79A7\")\n\nlibrary(vdemdata)\nlibrary(ggplot2)\nlibrary(tidyverse)\n# We will use the data called vdem\nvdem %>%\n  # and then we are going to filter out and only use France and India\n  filter(country_name == \"France\" | country_name == \"India\") %>%\n  # and then we are going to only use years since 1850\n  filter(year > 1849) %>% \n    # and then we are going to use this filtered data to make a plot\n    #with democracy on the y axis and year on the x\n    # we want this plot to use different colors for each country\n    ggplot(., aes(y = v2x_polyarchy, x = year, color=country_name)) +\n      geom_line() +\n      theme_minimal() +\n      xlab(\"Year\") +\n      ylab(\"Electoral Democracy Index\") +\n      ggtitle(\"Electoral Democracy, 1850-2022\") +\n      geom_hline(yintercept = .5, linetype = \"dashed\", color = \"grey\") +\n       scale_color_manual(name=\"Country\", values=c(\"#E69F00\", \"#56B4E9\")) +\n      ylim(0, 1)\n```\n\n## Example: UN Voting Trends\n\n```{r}\n#| label: un_voting\n\nlibrary(tidyverse)\nlibrary(unvotes)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(pacman)\n\nunvotes <- un_votes %>%\n  inner_join(un_roll_calls, by = \"rcid\") %>%\n  inner_join(un_roll_call_issues, by = \"rcid\")\n\nunvotes %>%\n  # then filter out to only include the countries we want\n  filter(country %in% c(\"South Africa\", \"United States\", \"France\")) %>%\n  # then make sure R understands the the year variable is a data\n  mutate(year = year(date)) %>%\n  # Then group the data by country and year\n  group_by(country, year, issue) %>%\n  # then take the average Yes votes for each country_year\n  summarize(percent_yes = mean(vote == \"yes\")) %>%\n  # then make a nice plot\n  ggplot(mapping = aes(x = year, y = percent_yes, color = country)) +\n  geom_point(alpha = 0.4) +\n  geom_smooth(method = \"loess\", se = FALSE) +\n  facet_wrap(~issue) +\n  scale_y_continuous(labels = percent) +\n  scale_color_manual( values=c(\"#E69F00\", \"#56B4E9\", \"#009E73\")) +\n  labs(\n    title = \"Percentage of 'Yes' votes in the UN General Assembly\",\n    subtitle = \"1946 to 2019\",\n    y = \"% Yes\",\n    x = \"Year\",\n    color = \"Country\"\n  )\n```\n\n## Your Task {.smaller}\n\n-   Make sure R and RStudio installed (we can help if needed)\n-   Create a folder for this class somewhere on your machine\n    -   Create a sub-folder called \"classwork\"\n    -   Download and save [week1-classwork.qmd](https://gwu.box.com/s/5eqoce40wrz9edbtr91b6cwvwvq03e27) in that folder\n-   Open the week1-classwork.qmd file in RStudio, which has code for 3 data viz activities\n    -   Map making\n    -   Democracy Over Time\n    -   UN Voting patterns\n-   Follow the instructions to update the code\n-   Click the little green arrow to run the code chunk\n-   Click Render to update your HTML output\n-   Complete as much as you can (no problem if you do not finish)\n\n\n## Quarto\n\n<br>\n\n::: {.incremental}\n-   [Quarto](https://quarto.org/) is an open-source scientific publishing platform\n-   Allows you to integrate text with code\n-   Kind of like a word processor for data science\n-   Can use it to create reports, books, websites, etc.\n-   Can make HTML, PDF, Word, and other formats\n-   Can use R, Python, Julia, and other languages\n:::\n\n## Project Oriented Workflow\n\n<br>\n\n:::{.incremental}\n-   Always start a document in a project folder\n    -   That way you don't have to do `setwd`\n    -   Also can share easily with other people\n-   Go to File\\>New Project\n-   Create a Quarto project folder\n:::\n\n## Visual Editor\n\n::: {.incremental}\n-   There are two ways to edit Quarto docs\n    -   Source (markdown)\n    -   Visual editor\n-   Visual editor\n    -   WYSIWYM\n    -   Approximates appearance\n-   Try both and see what you like\n:::\n\n## Rendering Documents {.smaller}\n\n::: {.incremental}\n-   Rendering = converting to another format\n    - Default format is HTML\n    - Can also render to PDF, Word, etc. \n-   To render a Quarto document\n    -   Click on the Render button\n        -   Or keyboard shortcut (Cmd/Ctrl + Shift + K)\n-   By default, Quarto will preview the document in your browser\n-   But you can also preview in Viewer pane\n    - Click on the gear icon next to the Render button\n    - Select \"Preview in Viewer Pane\"\n:::\n\n## Illustration\n\n![](images/intro_quarto.gif){fig-align=\"center\"}\n\n## Let's Try Quarto!\n\n-   Create a new Quarto document\n    -   File\\>New File\\>Quarto Document\n-   Save the document in your project folder\n-   Render it\n    -   Click on the Render button\n    -   Or keyboard shortcut (Cmd/Ctr + Shift + K)\n-   Try out the visual editor\n\n```{r}\n#| label: timer1.1\n\nlibrary(countdown)\ncountdown(minutes = 2, \n          id = \"timer1.1\", \n          top = \"0%\",\n          right = \"5%\")\n```\n\n# Quarto Docs\n\n## Document Elements\n\n<br>\n\n-   YAML Header\n-   Markdown content\n-   Code chunks\n\n## YAML Header\n\n<br>\n\n-   Metadata about the document\n    -   Title, author, date, etc.\n-   Output format\n-   Execution options\n\n## YAML Header\n\n```         \n---\ntitle: \"My Documnet\"\nauthor: \"Your Name\"\ndate: today\ndate-format: long\nformat: html\nexecute:\n  echo: false\n  message: false\n---\n```\n - Try changing some of these options in your document\n - Then render it again\n - Look in the Quarto [guide](https://quarto.org/docs/reference/formats/html.html) for other options to try\n\n```{r}\n#| label: timer3\n\ncountdown(minutes = 2, \n          id = \"timer3\", \n          bottom = \"0%\",\n          right = \"5%\")\n```\n\n## Markdown\n\n<br>\n\n::: {.incremental}\n-   Markdown is a simple markup language\n-   You can use it to format text\n-   You can also use it to embed images, tables, etc.\n-   And to embed code chunks...\n:::\n\n## Markdown Syntax - Basic Authoring\n\n::: {.incremental}\n-   For basic text you can just start typing\n-   For line breaks use two spaces and return (enter)\n-   Headings (use `#`, `##`, `###`, etc.)\n    -   `#` is the largest heading (level 1)\n    -   `##` is the next largest (level 2)\n    -   `###` is the next largest (level 3)\n    -   Etc.\n:::\n\n## Markdown Syntax - Styling\n\n::: {.incremental}\n-   Emphasis = Italics (use `*`)\n    -   Bold (use `**`)\n-   Lists\n    -   Bullet points (use `-`)\n    -   Numbered lists (use `1.`)\n:::\n\n## Markdown Syntax - Content\n\n::: {.incremental}\n-   Links (use `[text](url)`)\n-   Images (use `![](file path or url)`)\n-   Code chunks\n    -   R code chunks (\\`\\`\\`{r}...\\`\\`\\`)\n    -   Python code chunks (\\`\\`\\`{python}...\\`\\`\\`)\n    -   Etc. \n:::\n\n## Try Some Markdown\n\n<br>\n\n-   Check out the [Markdown Cheatsheet](https://www.markdownguide.org/basic-syntax/)\n-   Try editing the markdown in your document\n-   Try some of the other things you find in the guide\n-   Then render it again\n\n```{r}\n#| label: timer4\n\ncountdown(minutes = 10, \n          id = \"timer4\", \n          bottom = \"10%\",\n          right = \"10%\")\n```\n\n## Code Chunks\n\n::: {.incremental}\n-   Incorporate R code (could also be Python, Julia, etc.)\n-   Add a code chunk with the '+' button\n-   Run the code chunk by clicking the play button\n    -   Or use keyboard shortcut (Cmd/Ctrl + Shift + Enter)\n-   Run all chunks up that point by clicking the down arrow\n    -   Or use keyboard shortcut (Cmd/Ctrl + Shift + K)\n-  Run a single line with shortcut (Cmd/Ctrl + Enter) \n:::\n\n## Code Chunk Options\n\n::: {.incremental}\n-   Use `#|` (hash-pipe) to add options \n-   `label` is a unique identifier for the chunk\n-   Options to control what happens when you render\n    -   `echo` controls whether the code is shown\n    -   `eval` controls whether the code is run\n    -   `message` controls whether messages are shown\n    -   `warning` controls whether warnings are shown\n:::\n\n## Code Chunk Options\n\n<br>\n\n-   Code-chunk options override global options set in YAML header\n-   See [documentation](https://quarto.org/docs/reference/cells/cells-knitr.html) for more options\n-   You can also use write chunk options inline with chunk name,\n    -   e.g., `{r, echo = FALSE} ...`\n    \n## Illustration\n\n![](images/code-chunks.gif){fig-align=\"center\"}\n\n## Try it Yourself! \n\n-  Create a code chunk\n-  Copy this code chunk into your document\n\n```{r}\n#| label: chunk1\n#| echo: true\n#| eval: false\n#| \nlibrary(ggplot2)\n\nggplot(mpg, aes(displ, hwy, colour = class)) + \n  geom_point()\n```\n\n-  Try adding some chunk options in your document\n-  Then render it again\n\n```{r}\n#| label: timer5\n\ncountdown(minutes = 2, \n          id = \"timer5\", \n          bottom = \"10%\",\n          right = \"10%\")\n```\n\n# A Bit About R\n\n## R Packages and Functions {.smaller}\n\n<br>\n\n::: {.incremental}\n-   A *function* is a set of instructions\n    -   `read_csv()` is a function\n    -   `ggplot()` is a function\n-   A *package* is a collection of functions\n    -   `readr` is a package that contains the `read_csv()` function\n    -   `ggplot2` is a package that contains the `ggplot()` function\n-   Use `install.packages()` to install packages\n-   Use `library()` to load packages\n-   You can install packages from CRAN\n:::\n\n## The Tidyverse {.smaller}\n\n::: {.incremental}\n-   The Tidyverse is a collection of data science packages\n-   It is also considered a dialect of R\n-   In this class, we will be using many Tidyverse packages\n    -   `ggplot2` for data visualization\n    -   `readr` for reading data\n    -   `dplyr` for data manipulation\n    -   `tidyr` for data tidying\n    -   Etc.\n-   At first we will load the packages independently, e.g. `library(ggplot2)`\n-   Later we will load them all at once with `library(tidyverse)`\n:::\n\n","srcMarkdownNoYaml":"\n\n## Welcome!\n\n<br>\n\n| Professor Teitelbaum [ejt\\@gwu.edu](mailto:ejt@gwu.edu)\n| Office Hours: Tuesdays, 3:00-5:00 p.m.\n| Monroe Hall Rm 411 or online\n| Go to my [calendly page](https://calendly.com/emmanuel-teitelbaum) to sign up for a slot\n\n## Teaching Assistants\n\n<br>\n\n| Yuchen Zhao\n| email: [yuchen.zhao1\\@gwu.edu](mailto:yuchen.zhao1@gmail.com)\n| Office Hours: Wednesdays, 1:00 - 3:00 p.m.\n| Location TBD\n\n<br>\n\n| Jeffrey Kuo\n| email: [jeffkuo\\@gwu.edu](mailto:jeffkuo@gmail.com)\n| Office Hours: Wedensdays, 4:00-6:00 p.m.\n| Gelman Library\n\n## Why Take this Course?\n\n<br>\n\n-   International Affairs is changing!\n-   Data is everywhere and it is changing the way government works\n-   You will be a better consumer of data and research\n-   You can be a \"bridge builder\" between traditional analysts and data scientists on your team\n\n## Data Informed Dipomacy\n\n<br>\n\n> Data is a critical instrument of diplomacy. When our workforce has data at their fingertips they are better prepared to engage diplomatically, manage effectively, and lead globally.\n\n| Secretary of State Anthony Blinken, 2022[^1]\n\n[^1]: <https://www.state.gov/data/>\n\n## State Department Goals\n\n<br>\n\n::: columns\n::: {.column width=\"50%\"}\n[![](images/enterprise-strategy.png)](https://www.state.gov/wp-content/uploads/2021/09/Reference-EDS-Accessible.pdf)\n:::\n\n::: {.column width=\"50%\"}\n- Cultivate a Data Culture\n- Accelerate Decisions through Analytics\n- Establish Mission-Driven Data Management\n- Enhance Enterprise Data Governance\n:::\n:::\n\n## Open Goverment Data Act (2018)\n\n- Requires government data assets to be published as machine-readable data in open formats \n- Requires Chief Data Officers (CDOs) to be appointed at federal agencies\n- Requires CDOs to develop and maintain comprehensive data inventories\n- Has led to a proliferation of data science roles in the federal government\n\n::: aside\n<https://crsreports.congress.gov/product/pdf/IF/IF12299>\n:::\n\n## Open Source Intelligence \n\n<br>\n\n- More than 90% of the analysis in the intelligence community is based on open source information\n- Government agencies use a lot of the same datasets that we will be using in this class\n- Yet the OSINT community has only begun to scratch the surface of what is possible with data science\n\n## \n\n<br>\n\n![](images/MLP.jpg)\n\n::: notes\nMLP's digital tools provide fine-grained data tracking and forecasting major political events across nearly 60 countries by continuously scraping and process tens of millions of articles published by more than 300 local, regional, and international news sources in more than 30 languages. This infrastructure provides up-to-date data on recent and historical trends in civic space and foreign influence and builds forecasting models that learn from historical patterns to predict how conditions are likely to change in the near future.\n:::\n\n## \n\n<br>\n\n![](images/CSO.jpg)\n\n## Monitoring, Evaluation and Learning\n\n::: {.incremental}\n- Another important use of data in international affairs is monitoring, evaluation and learning (MEL)\n- MEL is a process that helps organizations track and assess the performance of their programs\n- MEL is a key component of [USAID](https://www.usaid.gov/activity-monitoring-evaluation-and-learning-mel-plan), the [World Bank](https://www.worldbank.org/en/research/dime/research) and other agencies \n- A major component of MEL is the use of randomized control trials (RCTs) and other designs, which you will learn about in this class\n:::\n\n## Skills/Knowledge You Will Gain\n\n<br>\n\n::: incremental\n1.  R coding skills (and RStudio), with focus on \"tidy\" approach and reproducible research\n2.  Quarto (html documents, PDFs, presentations, websites, books, blogs, ...)\n3.  How to access and \"clean\" data so that you can analyze it\n4.  When you hear terms like \"machine learning\", you'll have some sense of what people are talking about\n:::\n\n## Structure of the Course\n\n::: incremental\n1.  Data Visualization\n    -   Summarizing and communicating effectively with data\n2.  Statistical Inference\n    -   Making rigorous conclusions from data\n3.  Modeling\n    -   For prediction and forecasting\n    -   For drawing causal conclusions\n:::\n\n## How do I get an \"A\"? (requirements)\n\n<br>\n\n-   Weekly quizzes (20 percent)\n-   3 Data Analysis Assignments (45 percent; 15 percent each)\n-   Final Project (20 percent)\n\n## Course Website\n\n<br>\n\n-   <https://quant4ia.rocks>\n-   Let's take a quick tour!\n\n## Install R and RStudio\n\n<br>\n\n-   If you haven't already...\n-   Go to the RStudio [download page](https://posit.co/download/rstudio-desktop/)\n-   Download R and then RStudio\n\n## Set up RStudio {.smaller}\n\n<br>\n\n-   Go to Tools\\>Global Options\n-   Under Code, enable native pipe operator (`|>`)\n-   Under Appearance, choose a theme\n-   Configure panes\n    -   Go to Pane Layout\n    -   Move Source, Console, etc. to preferred positions\n\n## Illustration\n\n![](images/rstudio-setup.gif){fig-align=\"center\"}\n\n```{r}\n#| label: timer1\n\nlibrary(countdown)\ncountdown(minutes = 3, \n          id = \"timer1\", \n          top = \"0%\",\n          right = \"5%\",\n          color_border = \"#fff\",\n          color_text = \"#fff\",\n          color_running_background = \"#42affa\",\n          color_running_text = \"black\",\n          color_finished_background = \"#E5D19D\",\n          color_finished_text = \"#00264A\")\n```\n\n## Install key packages\n\n-   Install the Tidyverse group of packages from the console\n    -   `install.packages(\"tidyverse\")`\n-   Install `devtools`\n    -   `install.packages(\"devtools\")`)\n-   Install tinytex (for PDF rendering)\n    -   Go to your terminal and type `quarto install tinytex`\n\n## Illustration\n\n![](images/install-packages.gif){fig-align=\"center\"}\n\n```{r}\n#| label: timer2\n\ncountdown(minutes = 3, \n          id = \"timer2\",\n          top = \"0%\",\n          right = \"5%\")\n```\n\n## Let's get going . . .\n\n<br>\n\nYour first data visualizations...\n\n(and making sure we have R and RStudio installed and ready to roll)\n\n## Example: Make a map!\n\n```{r}\n#| label: leaflet_map\n\nlibrary(leaflet)\nleaflet() %>% \n  addTiles() %>%   # Add default OpenStreetMap map tiles\n  addMarkers(lat = 38.90243843683386, lng =  -77.0443814477152, \n             label = \"Elliott School of International Affairs\")\n```\n\n## Example: Plotting Democracy Over Time\n\n```{r}\n#| label: plot_democracy\n\n# For nice colors that work for color blind\ncbPalette <- c(\"#999999\", \"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\", \"#0072B2\", \"#D55E00\", \"#CC79A7\")\n\nlibrary(vdemdata)\nlibrary(ggplot2)\nlibrary(tidyverse)\n# We will use the data called vdem\nvdem %>%\n  # and then we are going to filter out and only use France and India\n  filter(country_name == \"France\" | country_name == \"India\") %>%\n  # and then we are going to only use years since 1850\n  filter(year > 1849) %>% \n    # and then we are going to use this filtered data to make a plot\n    #with democracy on the y axis and year on the x\n    # we want this plot to use different colors for each country\n    ggplot(., aes(y = v2x_polyarchy, x = year, color=country_name)) +\n      geom_line() +\n      theme_minimal() +\n      xlab(\"Year\") +\n      ylab(\"Electoral Democracy Index\") +\n      ggtitle(\"Electoral Democracy, 1850-2022\") +\n      geom_hline(yintercept = .5, linetype = \"dashed\", color = \"grey\") +\n       scale_color_manual(name=\"Country\", values=c(\"#E69F00\", \"#56B4E9\")) +\n      ylim(0, 1)\n```\n\n## Example: UN Voting Trends\n\n```{r}\n#| label: un_voting\n\nlibrary(tidyverse)\nlibrary(unvotes)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(pacman)\n\nunvotes <- un_votes %>%\n  inner_join(un_roll_calls, by = \"rcid\") %>%\n  inner_join(un_roll_call_issues, by = \"rcid\")\n\nunvotes %>%\n  # then filter out to only include the countries we want\n  filter(country %in% c(\"South Africa\", \"United States\", \"France\")) %>%\n  # then make sure R understands the the year variable is a data\n  mutate(year = year(date)) %>%\n  # Then group the data by country and year\n  group_by(country, year, issue) %>%\n  # then take the average Yes votes for each country_year\n  summarize(percent_yes = mean(vote == \"yes\")) %>%\n  # then make a nice plot\n  ggplot(mapping = aes(x = year, y = percent_yes, color = country)) +\n  geom_point(alpha = 0.4) +\n  geom_smooth(method = \"loess\", se = FALSE) +\n  facet_wrap(~issue) +\n  scale_y_continuous(labels = percent) +\n  scale_color_manual( values=c(\"#E69F00\", \"#56B4E9\", \"#009E73\")) +\n  labs(\n    title = \"Percentage of 'Yes' votes in the UN General Assembly\",\n    subtitle = \"1946 to 2019\",\n    y = \"% Yes\",\n    x = \"Year\",\n    color = \"Country\"\n  )\n```\n\n## Your Task {.smaller}\n\n-   Make sure R and RStudio installed (we can help if needed)\n-   Create a folder for this class somewhere on your machine\n    -   Create a sub-folder called \"classwork\"\n    -   Download and save [week1-classwork.qmd](https://gwu.box.com/s/5eqoce40wrz9edbtr91b6cwvwvq03e27) in that folder\n-   Open the week1-classwork.qmd file in RStudio, which has code for 3 data viz activities\n    -   Map making\n    -   Democracy Over Time\n    -   UN Voting patterns\n-   Follow the instructions to update the code\n-   Click the little green arrow to run the code chunk\n-   Click Render to update your HTML output\n-   Complete as much as you can (no problem if you do not finish)\n\n\n## Quarto\n\n<br>\n\n::: {.incremental}\n-   [Quarto](https://quarto.org/) is an open-source scientific publishing platform\n-   Allows you to integrate text with code\n-   Kind of like a word processor for data science\n-   Can use it to create reports, books, websites, etc.\n-   Can make HTML, PDF, Word, and other formats\n-   Can use R, Python, Julia, and other languages\n:::\n\n## Project Oriented Workflow\n\n<br>\n\n:::{.incremental}\n-   Always start a document in a project folder\n    -   That way you don't have to do `setwd`\n    -   Also can share easily with other people\n-   Go to File\\>New Project\n-   Create a Quarto project folder\n:::\n\n## Visual Editor\n\n::: {.incremental}\n-   There are two ways to edit Quarto docs\n    -   Source (markdown)\n    -   Visual editor\n-   Visual editor\n    -   WYSIWYM\n    -   Approximates appearance\n-   Try both and see what you like\n:::\n\n## Rendering Documents {.smaller}\n\n::: {.incremental}\n-   Rendering = converting to another format\n    - Default format is HTML\n    - Can also render to PDF, Word, etc. \n-   To render a Quarto document\n    -   Click on the Render button\n        -   Or keyboard shortcut (Cmd/Ctrl + Shift + K)\n-   By default, Quarto will preview the document in your browser\n-   But you can also preview in Viewer pane\n    - Click on the gear icon next to the Render button\n    - Select \"Preview in Viewer Pane\"\n:::\n\n## Illustration\n\n![](images/intro_quarto.gif){fig-align=\"center\"}\n\n## Let's Try Quarto!\n\n-   Create a new Quarto document\n    -   File\\>New File\\>Quarto Document\n-   Save the document in your project folder\n-   Render it\n    -   Click on the Render button\n    -   Or keyboard shortcut (Cmd/Ctr + Shift + K)\n-   Try out the visual editor\n\n```{r}\n#| label: timer1.1\n\nlibrary(countdown)\ncountdown(minutes = 2, \n          id = \"timer1.1\", \n          top = \"0%\",\n          right = \"5%\")\n```\n\n# Quarto Docs\n\n## Document Elements\n\n<br>\n\n-   YAML Header\n-   Markdown content\n-   Code chunks\n\n## YAML Header\n\n<br>\n\n-   Metadata about the document\n    -   Title, author, date, etc.\n-   Output format\n-   Execution options\n\n## YAML Header\n\n```         \n---\ntitle: \"My Documnet\"\nauthor: \"Your Name\"\ndate: today\ndate-format: long\nformat: html\nexecute:\n  echo: false\n  message: false\n---\n```\n - Try changing some of these options in your document\n - Then render it again\n - Look in the Quarto [guide](https://quarto.org/docs/reference/formats/html.html) for other options to try\n\n```{r}\n#| label: timer3\n\ncountdown(minutes = 2, \n          id = \"timer3\", \n          bottom = \"0%\",\n          right = \"5%\")\n```\n\n## Markdown\n\n<br>\n\n::: {.incremental}\n-   Markdown is a simple markup language\n-   You can use it to format text\n-   You can also use it to embed images, tables, etc.\n-   And to embed code chunks...\n:::\n\n## Markdown Syntax - Basic Authoring\n\n::: {.incremental}\n-   For basic text you can just start typing\n-   For line breaks use two spaces and return (enter)\n-   Headings (use `#`, `##`, `###`, etc.)\n    -   `#` is the largest heading (level 1)\n    -   `##` is the next largest (level 2)\n    -   `###` is the next largest (level 3)\n    -   Etc.\n:::\n\n## Markdown Syntax - Styling\n\n::: {.incremental}\n-   Emphasis = Italics (use `*`)\n    -   Bold (use `**`)\n-   Lists\n    -   Bullet points (use `-`)\n    -   Numbered lists (use `1.`)\n:::\n\n## Markdown Syntax - Content\n\n::: {.incremental}\n-   Links (use `[text](url)`)\n-   Images (use `![](file path or url)`)\n-   Code chunks\n    -   R code chunks (\\`\\`\\`{r}...\\`\\`\\`)\n    -   Python code chunks (\\`\\`\\`{python}...\\`\\`\\`)\n    -   Etc. \n:::\n\n## Try Some Markdown\n\n<br>\n\n-   Check out the [Markdown Cheatsheet](https://www.markdownguide.org/basic-syntax/)\n-   Try editing the markdown in your document\n-   Try some of the other things you find in the guide\n-   Then render it again\n\n```{r}\n#| label: timer4\n\ncountdown(minutes = 10, \n          id = \"timer4\", \n          bottom = \"10%\",\n          right = \"10%\")\n```\n\n## Code Chunks\n\n::: {.incremental}\n-   Incorporate R code (could also be Python, Julia, etc.)\n-   Add a code chunk with the '+' button\n-   Run the code chunk by clicking the play button\n    -   Or use keyboard shortcut (Cmd/Ctrl + Shift + Enter)\n-   Run all chunks up that point by clicking the down arrow\n    -   Or use keyboard shortcut (Cmd/Ctrl + Shift + K)\n-  Run a single line with shortcut (Cmd/Ctrl + Enter) \n:::\n\n## Code Chunk Options\n\n::: {.incremental}\n-   Use `#|` (hash-pipe) to add options \n-   `label` is a unique identifier for the chunk\n-   Options to control what happens when you render\n    -   `echo` controls whether the code is shown\n    -   `eval` controls whether the code is run\n    -   `message` controls whether messages are shown\n    -   `warning` controls whether warnings are shown\n:::\n\n## Code Chunk Options\n\n<br>\n\n-   Code-chunk options override global options set in YAML header\n-   See [documentation](https://quarto.org/docs/reference/cells/cells-knitr.html) for more options\n-   You can also use write chunk options inline with chunk name,\n    -   e.g., `{r, echo = FALSE} ...`\n    \n## Illustration\n\n![](images/code-chunks.gif){fig-align=\"center\"}\n\n## Try it Yourself! \n\n-  Create a code chunk\n-  Copy this code chunk into your document\n\n```{r}\n#| label: chunk1\n#| echo: true\n#| eval: false\n#| \nlibrary(ggplot2)\n\nggplot(mpg, aes(displ, hwy, colour = class)) + \n  geom_point()\n```\n\n-  Try adding some chunk options in your document\n-  Then render it again\n\n```{r}\n#| label: timer5\n\ncountdown(minutes = 2, \n          id = \"timer5\", \n          bottom = \"10%\",\n          right = \"10%\")\n```\n\n# A Bit About R\n\n## R Packages and Functions {.smaller}\n\n<br>\n\n::: {.incremental}\n-   A *function* is a set of instructions\n    -   `read_csv()` is a function\n    -   `ggplot()` is a function\n-   A *package* is a collection of functions\n    -   `readr` is a package that contains the `read_csv()` function\n    -   `ggplot2` is a package that contains the `ggplot()` function\n-   Use `install.packages()` to install packages\n-   Use `library()` to load packages\n-   You can install packages from CRAN\n:::\n\n## The Tidyverse {.smaller}\n\n::: {.incremental}\n-   The Tidyverse is a collection of data science packages\n-   It is also considered a dialect of R\n-   In this class, we will be using many Tidyverse packages\n    -   `ggplot2` for data visualization\n    -   `readr` for reading data\n    -   `dplyr` for data manipulation\n    -   `tidyr` for data tidying\n    -   Etc.\n-   At first we will load the packages independently, e.g. `library(ggplot2)`\n-   Later we will load them all at once with `library(tidyverse)`\n:::\n\n"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","output-file":"week-1.1.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.4.533","auto-stretch":true,"editor":"source","title":"Quantitative Analysis for IA Practitioners","subtitle":"IAFF 6501","footer":"[IAFF 6501 Website](https://quant4ia.rocks)","logo":"images/iaff6501-logo.png","theme":["simple","custom.scss"],"transition":"fade","slideNumber":true,"chalkboard":true}}},"projectFormats":["html"]}