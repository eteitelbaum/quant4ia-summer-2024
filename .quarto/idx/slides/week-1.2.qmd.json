{"title":"Visualizing Data","markdown":{"yaml":{"title":"Visualizing Data","date":"today","date-format":"long","footer":"[IAFF 6501 Website](https://quant4ia.rocks)","logo":"images/iaff6501-logo.png","format":{"revealjs":{"theme":["simple","custom.scss"],"transition":"fade","slide-number":true,"chalkboard":true}},"execute":{"echo":false,"message":false,"warning":false,"freeze":"auto"}},"headingText":"Reading Data into R","containsRefs":false,"markdown":"\n\n```{r}\n#| label: setup\n#| include: false\n\nlibrary(tidyverse)\nlibrary(vdemdata)\nlibrary(plotly)\nlibrary(WDI)\n\ntheme_set(theme_minimal())\n```\n\n\n```{r}\n#| label: vdem_setup\n#| include: false\n\npolyarchy_annual <- vdem %>%\n  group_by(year) %>%\n  summarize(\n    polyarchy = mean(v2x_polyarchy, na.rm = TRUE),\n    gdp_pc = mean(e_gdppc, na.rm = TRUE)*1000\n  ) %>%\n  mutate(\n    wave = case_when(year <= 1827 ~ \"pre 1st wave\",\n                       year > 1827 & year <= 1926 ~ \"1st wave\", \n                       year > 1926 & year <= 1945 ~ \"1st rev. wave\",\n                       year > 1945 & year <= 1962 ~ \"2nd wave\", \n                       year > 1962 & year <= 1973 ~ \"2nd rev. wave\", \n                       year > 1973 & year <= 2010 ~ \"3rd wave\", \n                       year > 2010 ~ \"3rd rev. wave\") %>%\n      factor(levels = c(\"pre 1st wave\", \"1st wave\", \"1st rev. wave\",\n                        \"2nd wave\", \"2nd rev. wave\", \"3rd wave\", \"3rd rev. wave\"))\n  ) %>%\n  drop_na()\n```\n\n\n\n## Getting Started with Data {.smaller}\n\n<br>\n\n::: {.incremental}\n- *Tabular data* is data that is organized into rows and columns\n  - a.k.a. *rectangular data*\n- A *data frame* is a special kind of tabular data used in data science\n- A *variable* is something you can measure \n- An *observation* is a single unit or case in your data set\n- The *unit of analysis* is the level at which you are measuring\n  - In a cross-section: country, state, county, city, individual, etc.\n  - In a time-series: year, month, day, etc.\n:::\n\n## Example\n\n![](images/tidy_data.jpg){fig-align=\"center\"}\n\n## Some Basic R Code {.smaller}\n\n<br>\n\n::: {.incremental}\n- `<-` is the assignment operator\n  - Use it to assign values to objects\n- `#` is the comment operator\n  - Use it to comment out code or add comments\n  - Different function than in markdown text\n- To call a library, use `library()` and name of library\n  - name of library does not have to be in quotes, e.g. `library(readr)`\n  - only when you install it, e.g. `install.packages(\"readr\")`\n:::\n\n## Read Data into R\n\n<br>\n\n```{r}\n#| label: read_data1\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"|1|2-3|5\"\n\n# load libraries\nlibrary(readr)\nlibrary(dplyr)\n\ndem_summary <- read_csv(\"data/dem_summary.csv\")\n```\n\n## Viewing the Data in R\n\n<br>\n\nUse `glimpse()` to see the columns and data types:\n\n```{r}\n#| label: read_data2\n#| echo: true\n#| code-line-numbers: \"7\"\n\n# load libraries\nlibrary(readr)\nlibrary(dplyr)\n\ndem_summary <- read_csv(\"data/dem_summary.csv\")\n\nglimpse(dem_summary)\n```\n\n# \n\nOr use `View()` or click on the name of the object in your Environment tab to see the data in a spreadsheet:\n\n![](images/view_df.gif){fig-align=\"center\"}\n\n## Try It Yourself!\n\n- Open the CSV file to see what it looks like\n- Then use this code to read it into R and view it\n\n```{r}\n#| label: read_data3\n#| echo: true\n#| eval: false\n\n# load libraries\nlibrary(readr)\nlibrary(dplyr)\n\ndem_summary <- read_csv(\"data/dem_summary.csv\")\n\nglimpse(dem_summary)\n```\n\n```{r}\n#| label: timer1\nlibrary(countdown)\ncountdown(minutes = 5, \n          id = \"timer1\", \n          bottom = \"10%\", \n          right = \"10%\",\n          color_border = \"#fff\",\n          color_text = \"#fff\",\n          color_running_background = \"#42affa\",\n          color_running_text = \"black\",\n          color_finished_background = \"#E5D19D\",\n          color_finished_text = \"#00264A\")\n```\n\n# Bar Charts\n\n## The Grammar of Graphics\n\n::: {.incremental}\n- Data viz has a language with its own grammar\n- Basic components include:\n  - Data we are trying to visualize\n  - Aesthetics (dimensions)\n  - Geom (e.g. bar, line, scatter plot)\n  - Color scales\n  - Themes\n  - Annotations\n::: \n  \n## \n\n<br>\n\nLet's start with the first two, the data and the aesthetic...\n\n<br>\n\n```{r}\n#| label: barchart1\n#| echo: true\n#| output: false\n#| code-line-numbers: \"6\"\n\nlibrary(readr)\nlibrary(ggplot2)\n\ndem_summary <- read_csv(\"data/dem_summary.csv\")\n\nggplot(dem_summary, aes(x = region, y = polyarchy)) \n```\n\n##\n\nThis gives us the axes without any visualization:\n\n```{r}\n#| label: barchart2\n\nggplot(dem_summary, aes(x = region, y = polyarchy)) \n```\n\n\n##\n\n<br>\n\nNow let's add a geom. In this case we want a bar chart so we *add* `geom_col()`.\n\n<br>\n\n```{r}\n#| label: barchart3\n#| echo: true\n#| output: false\n\nggplot(dem_summary, aes(x = region, y = polyarchy)) + \n  geom_col()\n```\n\n## \n\nThat gets the idea across but looks a little depressing, so...\n\n```{r}\n#| label: barchart4\n\nggplot(dem_summary, aes(x = region, y = polyarchy)) + \n  geom_col()\n```\n\n## \n\n<br>\n\n...let's change the color of the bars by specifying `fill = \"steelblue\"`.\n\n<br>\n\n```{r}\n#| label: barchart5\n#| echo: true\n#| output: false\n#| code-line-numbers: \"2\"\n\nggplot(dem_summary, aes(x = region, y = polyarchy)) + \n  geom_col(fill = \"steelblue\")\n```\n\n## \n\nNote how color of original bars is simply overwritten:\n\n```{r}\n#| label: barchart6\n\nggplot(dem_summary, aes(x = region, y = polyarchy)) + \n  geom_col(fill = \"steelblue\")\n```\n\n## \n\n<br>\n\nNow let's *add* some labels with the `labs()` function:\n\n<br>\n\n```{r}\n#| label: barchart7\n#| echo: true\n#| output: false\n#| code-line-numbers: \"3-8\"\n\nggplot(dem_summary, aes(x = region, y = polyarchy)) + \n  geom_col(fill = \"steelblue\") +\n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )\n```\n\n## \n\nAnd that gives us... \n\n```{r}\n#| label: barchart8\n\nggplot(dem_summary, aes(x = region, y = polyarchy)) + \n  geom_col(fill = \"steelblue\") +\n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )\n```\n\n## \n\nNext, we reorder the bars with `fct_reorder()` from the `forcats` package. \n\n<br>\n\n```{r}\n#| label: barchart9\n#| echo: true\n#| output: false\n#| code-line-numbers: \"1\"\n\nlibrary(forcats)\n\nggplot(dem_summary, aes(x = fct_reorder(region, -polyarchy), y = polyarchy)) +\n  geom_col(fill = \"steelblue\") + \n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )\n```\n\n<br> \n\nNote that we could also use the base R `reorder()` function here.\n\n## \n\nThis way, we get a nice, visually appealing ordering of the bars according to levels of democracy...\n\n```{r}\n#| label: barchart10\n\nggplot(dem_summary, aes(x = fct_reorder(region, -polyarchy), y = polyarchy)) +\n  geom_col(fill = \"steelblue\") + \n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )\n```\n\n## \n\n<br>\n\nNow let's change the theme to `theme_minimal()`. \n\n<br>\n\n```{r}\n#| label: barchart11\n#| echo: true\n#| output: false\n#| code-line-numbers: \"8\"\n\nggplot(dem_summary, aes(x = reorder(region, -polyarchy), y = polyarchy)) +\n  geom_col(fill = \"steelblue\") + \n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    ) + theme_minimal()\n```\n\n## \n\nGives us a clean, elegant look. \n\n```{r}\n#| label: barchart12\n\nggplot(dem_summary, aes(x = reorder(region, -polyarchy), y = polyarchy)) +\n  geom_col(fill = \"steelblue\") + \n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    ) + theme_minimal()\n```\n\n\n##\n\n<br>\n\nNote that you can also save your plot as an object to modify later.\n\n<br>\n\n```{r}\n#| label: barchart13\n#| echo: true\n#| output: false\n\ndem_bar_chart <- ggplot(dem_summary, aes(x = reorder(region, -polyarchy), y = polyarchy)) +\n  geom_col(fill = \"steelblue\")\n```\n\n##\n\nWhich gives us...\n\n```{r}\n#| label: barchart14\n#| echo: true\n \ndem_bar_chart\n```\n\n## \n\n<br> \n\nNow let's add back our labels... \n\n<br>\n\n```{r}\n#| label: barchart15\n#| echo: true\n#| output: false\n\ndem_bar_chart <- dem_bar_chart +\n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )\n```\n\n##\n\nSo now we have... \n\n```{r}\n#| label: barchart16\n#| echo: true\n\ndem_bar_chart\n```\n\n## \n\n<br> \n\nAnd now we'll add back our theme...\n\n<br>\n\n```{r}\n#| label: barchart17\n#| echo: true\n#| output: false\n\ndem_bar_chart <- dem_bar_chart + theme_minimal()\n```\n\n##\n\nVoila! \n\n```{r}\n#| label: barchart18\n#| echo: true\n\ndem_bar_chart\n```\n\n##\n\nChange the theme. There are many [themes](https://ggplot2.tidyverse.org/reference/ggtheme.html) to choose from.\n\n```{r}\n#| label: barchart19\n#| echo: true\n\ndem_bar_chart + theme_bw()\n```\n\n## Your Turn!\n\n1. `glimpse()` the data\n2. Find a new variable to visualize\n3. Make a bar chart with it\n4. Change the [color](http://sape.inf.usi.ch/quick-reference/ggplot2/colour) of the bars\n5. Order the bars\n6. Add labels\n7. Add a [theme](https://ggplot2.tidyverse.org/reference/ggtheme.html)\n8. Try saving your plot as an object\n9. Then change the labels and/or theme\n\n```{r}\n#| label: timer2\ncountdown::countdown(minutes = 10, id = \"timer2\")\n```\n\n\n```{r}\n#| label: vdem_setup_2\n#| include: false\n\npolyarchy_annual <- vdem %>%\n  group_by(year) %>%\n  summarize(\n    polyarchy = mean(v2x_polyarchy, na.rm = TRUE),\n    gdp_pc = mean(e_gdppc, na.rm = TRUE)*1000\n  ) %>%\n  mutate(\n    wave = case_when(year <= 1827 ~ \"pre 1st wave\",\n                       year > 1827 & year <= 1926 ~ \"1st wave\", \n                       year > 1926 & year <= 1945 ~ \"1st rev. wave\",\n                       year > 1945 & year <= 1962 ~ \"2nd wave\", \n                       year > 1962 & year <= 1973 ~ \"2nd rev. wave\", \n                       year > 1973 & year <= 2010 ~ \"3rd wave\", \n                       year > 2010 ~ \"3rd rev. wave\") %>%\n      factor(levels = c(\"pre 1st wave\", \"1st wave\", \"1st rev. wave\",\n                        \"2nd wave\", \"2nd rev. wave\", \"3rd wave\", \"3rd rev. wave\"))\n  ) %>%\n  drop_na()\n```\n\n## Links to Classwork Folders\n\n- [Box](https://gwu.box.com/s/9xwaelyhv7uibtegxrgh80vgo7da10ie)\n- [Dropbox](https://www.dropbox.com/scl/fo/g4tdpdwcij78nyydvr4bp/h?rlkey=hctskhle6222csnwre5ir9gz3&dl=0)\n\n## Huntington's Three Waves\n\n```{r}\n#| label: huntington\nregion_plot <- ggplot(polyarchy_annual, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = wave)) + \n  geom_smooth(method = \"lm\", se = FALSE, size = .75) + \n  scale_x_log10(label = scales::label_dollar()) +\n  aes(label = year) +\n  labs(x= \"GDP Per Capita\", y = \"Polyarchy Score\",\n       title = \"Democracy, development and Huntington's three waves\") +\n  scale_color_discrete(name = \"Wave\")\n\nggplotly(region_plot, tooltip = c(\"year\", \"polyarchy\")) %>%   \n  # add source\n  layout(annotations = list(text = \"Source: The V-Dem Institute, Varities of Democracy Dataset\",  \n                            font = list(size = 10), showarrow = FALSE,\n                            xref = 'paper', x = 1, xanchor = 'right', xshift = 100,\n                            yref = 'paper', y = -.1, yanchor = 'auto', yshift = 0)) %>%\n  # add web address\n  layout(annotations = list(text = \"www.psc2339.com\", \n                            font = list(size = 10, color = 'grey'), showarrow = FALSE,\n                            xref = 'paper', x = .5, xanchor = 'center', xshift = 0,\n                            yref = 'paper', y = 1, yanchor = 'top', yshift = 0))\n```\n\n## Setup\n\n```{r}\n#| label: dem_waves_setup\n#| echo: true\n#| output: false\n\nlibrary(vdemdata)\nlibrary(tidyverse)\n\ndem_waves_ctrs <- vdem |>\n  select(\n    country = country_name,     \n    year, \n    polyarchy = v2x_polyarchy, \n  ) |>\n  filter( \n    country %in% c(\"United States of America\", # select countries in this list\n                   \"Japan\", \n                   \"Portugal\")\n    )\n\nwrite_csv(dem_waves_ctrs, \"data/dem_waves_ctrs.csv\")\n```\n\n```{r}\n#| label: exercise1_timer\ncountdown::countdown(minutes = 2, \n                     id = \"setup\", \n                     #bottom = \"10%\", \n                     #right = \"10%\",\n                     color_border = \"#fff\",\n                     color_text = \"#fff\",\n                     color_running_background = \"#42affa\",\n                     color_running_text = \"black\",\n                     color_finished_background = \"#E5D19D\",\n                     color_finished_text = \"#00264A\")\n```\n\n## Line Chart\n\n```{r}\n#| label: geom_line1\n\n# in this ggplot() call, we add a third dimension for line color\ndem_waves_chart <- ggplot(dem_waves_ctrs, aes(x = year, y = polyarchy, color = country)) +\n  geom_line(linewidth = 1) + # our geom is a line with a width of 1\n  labs(\n    x = \"Year\", \n    y = \"Polyarchy Score\", \n    title = 'Democracy in countries representing three different \"waves\"', \n    caption = \"Source: V-Dem Institute\", \n    color = \"Country\" # make title of legend to upper case\n  )\n\ndem_waves_chart\n```\n\n##\n\n<br>\n\nHere is the code... \n\n<br>\n\n```{r}\n#| label: geom_line2\n#| eval: false\n#| echo: true\n\n# in this ggplot() call, we add a third dimension for line color\nggplot(dem_waves_ctrs, aes(x = year, y = polyarchy, color = country)) +\n  geom_line(linewidth = 1) + # our geom is a line with a width of 1\n  labs(\n    x = \"Year\", \n    y = \"Polyarchy Score\", \n    title = 'Democracy in countries representing three different \"waves\"', \n    caption = \"Source: V-Dem Institute\", \n    color = \"Country\" # make title of legend to upper case\n  )\n```\n\n## \n\n<br>\n\nUse `geom_line()` to specify a line chart... \n\n<br>\n\n```{r}\n#| label: geom_line3\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"3\"\n\n# in this ggplot() call, we add a third dimension for line color\nggplot(dem_waves_ctrs, aes(x = year, y = polyarchy, color = country)) +\n  geom_line(linewidth = 1) + # our geom is a line with a width of 1\n  labs(\n    x = \"Year\", \n    y = \"Polyarchy Score\", \n    title = 'Democracy in countries representing three different \"waves\"', \n    caption = \"Source: V-Dem Institute\", \n    color = \"Country\" # make title of legend to upper case\n  )\n```\n\n## \n\n<br>\n\nAdd third dimension to the `aes()` call for line color...\n\n<br>\n\n```{r}\n#| label: geom_line4\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"2\"\n\n# in this ggplot() call, we add a third dimension for line color\nggplot(dem_waves_ctrs, aes(x = year, y = polyarchy, color = country)) +\n  geom_line(linewidth = 1) + # our geom is a line with a width of 1\n  labs(\n    x = \"Year\", \n    y = \"Polyarchy Score\", \n    title = 'Democracy in countries representing three different \"waves\"', \n    caption = \"Source: V-Dem Institute\", \n    color = \"Country\" # make title of legend to upper case\n  )\n```\n\n## \n\n<br>\n\nModify the legend title...\n\n<br>\n\n```{r}\n#| label: geom_line5\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"9\"\n\n# in this ggplot() call, we add a third dimension for line color\nggplot(dem_waves_ctrs, aes(x = year, y = polyarchy, color = country)) +\n  geom_line(linewidth = 1) + # our geom is a line with a width of 1\n  labs(\n    x = \"Year\", \n    y = \"Polyarchy Score\", \n    title = 'Democracy in countries representing three different \"waves\"', \n    caption = \"Source: V-Dem Institute\", \n    color = \"Country\" # make title of legend to upper case\n  )\n```\n\n## Problem\n\n```{r}\n#| label: cvd_plot\n\nlibrary(colorBlindness)\n\ncvdPlot(dem_waves_chart)\n```\n\n## Color Blindness\n\n<br>\n\n- Color Vision Deficiency (CVD) or color blindness affects 8 percent of men and 1 in 200 women\n- There are different types of CVD but most common is red-green color blindness\n- Therefore, don't include red and green in the same chart! \n- Look for color blind safe palettes\n\n## \n\n**Solution:** Use a colorblind safe color scheme like `viridis`...\n\n```{r}\n#| label: geom_line6\n\n# in this ggplot() call, we add a third dimension for line color\ndem_waves_viridis <- ggplot(dem_waves_ctrs, aes(x = year, y = polyarchy, color = country)) +\n  geom_line(linewidth = 1) + # our geom is a line with a width of 1\n  labs(\n    x = \"Year\", \n    y = \"Polyarchy Score\", \n    title = 'Democracy in countries representing three different \"waves\"', \n    caption = \"Source: V-Dem Institute\", \n    color = \"Country\" # make title of legend to upper case\n  ) +\n  scale_color_viridis_d(option = \"mako\", end = .8) # use viridis color palette\n\ndem_waves_viridis\n```\n\n##\n\n<br>\n\nUse `scale_color_viridis_d()` in this case to specify the viridis color scheme...\n\n```{r}\n#| label: geom_line7\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"11\"\n\n# in this ggplot() call, we add a third dimension for line color\nggplot(dem_waves_ctrs, aes(x = year, y = polyarchy, color = country)) +\n  geom_line(linewidth = 1) + # our geom is a line with a width of 1\n  labs(\n    x = \"Year\", \n    y = \"Polyarchy Score\", \n    title = 'Democracy in countries representing three different \"waves\"', \n    caption = \"Source: V-Dem Institute\", \n    color = \"Country\" # make title of legend to upper case\n  ) +\n  scale_color_viridis_d(option = \"mako\", end = .8) # use viridis color palette\n```\n\n## Better!\n\n```{r}\n#| label: cvdplot2\n\ncvdPlot(dem_waves_viridis)\n```\n\n## Palettes\n\n<br>\n\n- There are a number of viridis palettes\n- See [this reference](https://search.r-project.org/CRAN/refmans/viridisLite/html/viridis.html) to view different palettes and options\n- You can also use `scale_color_viridis_c()` to specify a continuous color scale \n- Also check out the [paletteer package](https://emilhvitfeldt.github.io/paletteer/) for easy access to many more palettes\n\n## Your Turn!\n\n<br>\n\n- See table three of [this article](https://kurzman.unc.edu/wp-content/uploads/sites/1410/2011/06/Kurzman_Waves_of_Democratization.pdf)\n- Select three countries to visualize\n- Adjust setup code to filter data on those countries \n- Visualize with `geom_line()`\n- Use `scale_color_viridis_d()` to specify a viridis color scheme\n\n```{r}\n#| label: scatterplot_timer\ncountdown::countdown(minutes = 10, \n                     id = \"scatter_plot_timer\", \n                     bottom = \"10%\", \n                     right = \"10%\")\n```\n\n## Scatter Plot Setup\n\n<br>\n\n```{r}\n#| label: scatter_plot_setup\n#| echo: true\n\ndem_summary_ctry <- read_csv(\"data/dem_women.csv\") |>\n  group_by(country, region) |> # group by country, keep region\n  summarize(\n    polyarchy = mean(polyarchy, na.rm = TRUE),\n    gdp_pc = mean(gdp_pc, na.rm = TRUE), \n    flfp = mean(flfp, na.rm = TRUE), \n    women_rep = mean(women_rep, na.rm = TRUE)\n  )\n```\n\n## Scatter Plot\n\n```{r}\n#| label: scatter1\n#| code-fold: true\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy, color = region, size = women_rep)) + \n  geom_point() + # use geom_point() for scatter plots\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\",\n    size = \"Women Reps\"\n    ) + \n  scale_color_viridis_d(option = \"inferno\", end = .8)\n```\n\n## Scatter Plot\n\n<br>\n\nUse `geom_point()`...\n\n```{r}\n#| label: scatter2\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"2\"\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy, color = region, size = women_rep)) +\n  geom_point() + # use geom_point() for scatter plots\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\",\n    size = \"Women Reps\"\n    ) +\n  scale_color_viridis_d(option = \"inferno\", end = .8)\n```\n\n## Scatter Plot\n\n<br>\n\nFour dimensions... \n\n```{r}\n#| label: scatter3\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"1-1\"\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy, color = region, size = women_rep)) + \n  geom_point() + # use geom_point() for scatter plots\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\",\n    size = \"Women Reps\"\n    ) +\n  scale_color_viridis_d(option = \"inferno\", end = .8)\n```\n\n## Scatter Plot\n\n<br>\n\nStretch axis on log scale and use `scales` package to adjust labels...\n\n```{r}\n#| label: scatter4\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"3\"\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy, color = region, size = women_rep)) + \n  geom_point() + # use geom_point() for scatter plots\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\",\n    size = \"Women Reps\"\n    ) +\n  scale_color_viridis_d(option = \"inferno\", end = .8)\n```\n\n\n## Scatter Plot\n\n<br>\n\nChange legend titles... \n\n```{r}\n#| label: scatter5\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"9-10\"\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy, color = region, size = women_rep)) + \n  geom_point() + # use geom_point() for scatter plots\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\",\n    size = \"Women Reps\"\n    ) +\n  scale_color_viridis_d(option = \"inferno\", end = .8)\n```\n\n## Your Turn! \n\n- There are four variables in `dem_summary_ctry`\n- Pick one related to women's empowerment\n- Visualize it on the y-axis with `gdp_pc` or `polyarchy` on the x-axis \n- Change labels and legend titles to match your visualization\n- Interpret your plot\n\n```{r}\n#|label: dem_waves_time\ncountdown::countdown(minutes = 5, \n                     id = \"women_emp\")\n```\n\n## Add a Trend Line\n\n```{r}\n#| label: trend_line1\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = region)) + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\"\n    ) +\n  scale_color_viridis_d(option = \"inferno\", end = .8)\n```\n\n## Add a Trend Line\n\n<br>\n\n```{r}\n#| label: trend_line2\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"3\"\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = region)) + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\"\n    ) +\n  scale_color_viridis_d(option = \"inferno\", end = .8)\n```\n\n## Add a Trend Line\n\n<br>\n\nTaking out size and adding color to `geom_point()` call...\n\n```{r}\n#| label: trend_line3\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"1-2\"\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = region)) + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\"\n    ) + \n  scale_color_viridis_d(option = \"inferno\", end = .8)\n```\n\n## Add a Trend Line\n\n<br>\n\nChanging legend titles...\n\n```{r}\n#| label: trend_line4\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"5-11\"\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = region)) + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\"\n    ) +\n  scale_color_viridis_d(option = \"inferno\", end = .8)\n```\n\n## Your Turn! \n\n<br>\n\n- Add a trendline to your plot\n- Change the labels accordingly\n- Try using `method = \"loess\"` instead of a \"lm\"\n\n```{r}\n#|label: trend_line_time\ncountdown::countdown(minutes = 5, \n                     id = \"trend\", \n                     bottom = \"10%\", \n                     right = \"10%\")\n```\n\n## Facet Wrapping\n\n```{r}\n#| label: facet_wrap0\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point() + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  facet_wrap(~ region) +\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )\n```\n\n## Facet Wrapping\n\n<br>\n\nUse `facet_wrap()` with `~` before variable you want to wrap on...\n\n```{r}\n#| label: facet_wrap1\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"4\"\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point() + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  facet_wrap(~ region) +\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )\n```\n\n## Facet Wrapping\n\n<br>\n\nWhat else changes? Back down to two dimensions...\n\n```{r}\n#| label: facet_wrap2\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"1-2\"\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point() + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  facet_wrap(~ region) +\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )\n```\n\n## Facet Wrapping\n\n<br>\n\nDon't forget to take the legend title out of the captions...\n\n```{r}\n#| label: facet_wrap3\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"6-11\"\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point() + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  facet_wrap(~ region) +\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )\n```\n\n## Your Turn!\n\n<br>\n\n- Facet wrap your scatter plot\n- Use `scales = \"free\"` in `facet_wrap` call to fix the West\n  - `facet_wrap(~ region, scales = \"free\")`\n\n```{r}\n#|label: facet_wrap_time\ncountdown::countdown(minutes = 5, \n                     id = \"facet\", \n                     bottom = \"10%\", \n                     right = \"10%\")\n```\n\n## Labeling Points\n\n```{r}\n#| label: geom_text1\ndem_summary_ctry |> \n  filter(region == \"Asia\") |>\n  ggplot(aes(x = gdp_pc, y = polyarchy)) + \n    geom_point() + \n    geom_text(aes(label = country), size = 2, vjust = 2) +\n    geom_smooth(method = \"lm\", linewidth = 1) +\n    scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n      labs(\n        x= \"GDP Per Capita\", \n        y = \"Polyarchy Score\",\n        title = \"Wealth and democracy in Asia, 1990 - present\", \n        caption = \"Source: V-Dem Institute\"\n        )\n```\n\n## Labeling Points\n\n<br>\n\nFilter for Asia, add labels with `geom_text()`...\n\n```{r}\n#| label: geom_text2\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"1-5\"\ndem_summary_ctry |> \n  filter(region == \"Asia\") |>\n  ggplot(aes(x = gdp_pc, y = polyarchy)) + \n    geom_point() + \n    geom_text(aes(label = country), size = 2, vjust = 2) +\n    geom_smooth(method = \"lm\", linewidth = 1) +\n    scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n      labs(\n        x= \"GDP Per Capita\", \n        y = \"Polyarchy Score\",\n        title = \"Wealth and democracy in Asia, 1990 - present\", \n        caption = \"Source: V-Dem Institute\"\n        )\n```\n\n## Your Turn!\n\n<br>\n\n- Filter for Asia or another region\n- Use `geom_text()` to add labels to your points\n- Play with `size` and `vjust` paramters \n\n```{r}\n#|label: label_time\ncountdown::countdown(minutes = 5, \n                     id = \"labels\", \n                     bottom = \"10%\", \n                     right = \"10%\")\n```\n\n## Make it Interactive\n\n```{r}\n#| label: plotly1\n\nlibrary(plotly)\n\nmodernization_plot <- ggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = region)) + \n  aes(label = country) +\n  geom_smooth(method = \"lm\", linewidth = 1) + \n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\"\n    ) +\n  scale_color_viridis_d(option = \"inferno\", end = .8)\n\nggplotly(modernization_plot, tooltip = c(\"country\", \"gdp_pc\", \"polyarchy\"))\n```\n\n##\n\n<br>\n\nUse `plotly` to make any plot interactive...\n\n```{r}\n#| label: plotly2\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"|1|3|5|17\"\nlibrary(plotly)\n\nmodernization_plot <- ggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = region)) + \n  aes(label = country) +\n  geom_smooth(method = \"lm\", linewidth = 1) + \n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\"\n    ) +\n  scale_color_viridis_d(option = \"inferno\", end = .8)\n\nggplotly(modernization_plot, tooltip = c(\"country\", \"gdp_pc\", \"polyarchy\"))\n```\n\n\n\n","srcMarkdownNoYaml":"\n\n```{r}\n#| label: setup\n#| include: false\n\nlibrary(tidyverse)\nlibrary(vdemdata)\nlibrary(plotly)\nlibrary(WDI)\n\ntheme_set(theme_minimal())\n```\n\n\n```{r}\n#| label: vdem_setup\n#| include: false\n\npolyarchy_annual <- vdem %>%\n  group_by(year) %>%\n  summarize(\n    polyarchy = mean(v2x_polyarchy, na.rm = TRUE),\n    gdp_pc = mean(e_gdppc, na.rm = TRUE)*1000\n  ) %>%\n  mutate(\n    wave = case_when(year <= 1827 ~ \"pre 1st wave\",\n                       year > 1827 & year <= 1926 ~ \"1st wave\", \n                       year > 1926 & year <= 1945 ~ \"1st rev. wave\",\n                       year > 1945 & year <= 1962 ~ \"2nd wave\", \n                       year > 1962 & year <= 1973 ~ \"2nd rev. wave\", \n                       year > 1973 & year <= 2010 ~ \"3rd wave\", \n                       year > 2010 ~ \"3rd rev. wave\") %>%\n      factor(levels = c(\"pre 1st wave\", \"1st wave\", \"1st rev. wave\",\n                        \"2nd wave\", \"2nd rev. wave\", \"3rd wave\", \"3rd rev. wave\"))\n  ) %>%\n  drop_na()\n```\n\n\n# Reading Data into R\n\n## Getting Started with Data {.smaller}\n\n<br>\n\n::: {.incremental}\n- *Tabular data* is data that is organized into rows and columns\n  - a.k.a. *rectangular data*\n- A *data frame* is a special kind of tabular data used in data science\n- A *variable* is something you can measure \n- An *observation* is a single unit or case in your data set\n- The *unit of analysis* is the level at which you are measuring\n  - In a cross-section: country, state, county, city, individual, etc.\n  - In a time-series: year, month, day, etc.\n:::\n\n## Example\n\n![](images/tidy_data.jpg){fig-align=\"center\"}\n\n## Some Basic R Code {.smaller}\n\n<br>\n\n::: {.incremental}\n- `<-` is the assignment operator\n  - Use it to assign values to objects\n- `#` is the comment operator\n  - Use it to comment out code or add comments\n  - Different function than in markdown text\n- To call a library, use `library()` and name of library\n  - name of library does not have to be in quotes, e.g. `library(readr)`\n  - only when you install it, e.g. `install.packages(\"readr\")`\n:::\n\n## Read Data into R\n\n<br>\n\n```{r}\n#| label: read_data1\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"|1|2-3|5\"\n\n# load libraries\nlibrary(readr)\nlibrary(dplyr)\n\ndem_summary <- read_csv(\"data/dem_summary.csv\")\n```\n\n## Viewing the Data in R\n\n<br>\n\nUse `glimpse()` to see the columns and data types:\n\n```{r}\n#| label: read_data2\n#| echo: true\n#| code-line-numbers: \"7\"\n\n# load libraries\nlibrary(readr)\nlibrary(dplyr)\n\ndem_summary <- read_csv(\"data/dem_summary.csv\")\n\nglimpse(dem_summary)\n```\n\n# \n\nOr use `View()` or click on the name of the object in your Environment tab to see the data in a spreadsheet:\n\n![](images/view_df.gif){fig-align=\"center\"}\n\n## Try It Yourself!\n\n- Open the CSV file to see what it looks like\n- Then use this code to read it into R and view it\n\n```{r}\n#| label: read_data3\n#| echo: true\n#| eval: false\n\n# load libraries\nlibrary(readr)\nlibrary(dplyr)\n\ndem_summary <- read_csv(\"data/dem_summary.csv\")\n\nglimpse(dem_summary)\n```\n\n```{r}\n#| label: timer1\nlibrary(countdown)\ncountdown(minutes = 5, \n          id = \"timer1\", \n          bottom = \"10%\", \n          right = \"10%\",\n          color_border = \"#fff\",\n          color_text = \"#fff\",\n          color_running_background = \"#42affa\",\n          color_running_text = \"black\",\n          color_finished_background = \"#E5D19D\",\n          color_finished_text = \"#00264A\")\n```\n\n# Bar Charts\n\n## The Grammar of Graphics\n\n::: {.incremental}\n- Data viz has a language with its own grammar\n- Basic components include:\n  - Data we are trying to visualize\n  - Aesthetics (dimensions)\n  - Geom (e.g. bar, line, scatter plot)\n  - Color scales\n  - Themes\n  - Annotations\n::: \n  \n## \n\n<br>\n\nLet's start with the first two, the data and the aesthetic...\n\n<br>\n\n```{r}\n#| label: barchart1\n#| echo: true\n#| output: false\n#| code-line-numbers: \"6\"\n\nlibrary(readr)\nlibrary(ggplot2)\n\ndem_summary <- read_csv(\"data/dem_summary.csv\")\n\nggplot(dem_summary, aes(x = region, y = polyarchy)) \n```\n\n##\n\nThis gives us the axes without any visualization:\n\n```{r}\n#| label: barchart2\n\nggplot(dem_summary, aes(x = region, y = polyarchy)) \n```\n\n\n##\n\n<br>\n\nNow let's add a geom. In this case we want a bar chart so we *add* `geom_col()`.\n\n<br>\n\n```{r}\n#| label: barchart3\n#| echo: true\n#| output: false\n\nggplot(dem_summary, aes(x = region, y = polyarchy)) + \n  geom_col()\n```\n\n## \n\nThat gets the idea across but looks a little depressing, so...\n\n```{r}\n#| label: barchart4\n\nggplot(dem_summary, aes(x = region, y = polyarchy)) + \n  geom_col()\n```\n\n## \n\n<br>\n\n...let's change the color of the bars by specifying `fill = \"steelblue\"`.\n\n<br>\n\n```{r}\n#| label: barchart5\n#| echo: true\n#| output: false\n#| code-line-numbers: \"2\"\n\nggplot(dem_summary, aes(x = region, y = polyarchy)) + \n  geom_col(fill = \"steelblue\")\n```\n\n## \n\nNote how color of original bars is simply overwritten:\n\n```{r}\n#| label: barchart6\n\nggplot(dem_summary, aes(x = region, y = polyarchy)) + \n  geom_col(fill = \"steelblue\")\n```\n\n## \n\n<br>\n\nNow let's *add* some labels with the `labs()` function:\n\n<br>\n\n```{r}\n#| label: barchart7\n#| echo: true\n#| output: false\n#| code-line-numbers: \"3-8\"\n\nggplot(dem_summary, aes(x = region, y = polyarchy)) + \n  geom_col(fill = \"steelblue\") +\n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )\n```\n\n## \n\nAnd that gives us... \n\n```{r}\n#| label: barchart8\n\nggplot(dem_summary, aes(x = region, y = polyarchy)) + \n  geom_col(fill = \"steelblue\") +\n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )\n```\n\n## \n\nNext, we reorder the bars with `fct_reorder()` from the `forcats` package. \n\n<br>\n\n```{r}\n#| label: barchart9\n#| echo: true\n#| output: false\n#| code-line-numbers: \"1\"\n\nlibrary(forcats)\n\nggplot(dem_summary, aes(x = fct_reorder(region, -polyarchy), y = polyarchy)) +\n  geom_col(fill = \"steelblue\") + \n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )\n```\n\n<br> \n\nNote that we could also use the base R `reorder()` function here.\n\n## \n\nThis way, we get a nice, visually appealing ordering of the bars according to levels of democracy...\n\n```{r}\n#| label: barchart10\n\nggplot(dem_summary, aes(x = fct_reorder(region, -polyarchy), y = polyarchy)) +\n  geom_col(fill = \"steelblue\") + \n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )\n```\n\n## \n\n<br>\n\nNow let's change the theme to `theme_minimal()`. \n\n<br>\n\n```{r}\n#| label: barchart11\n#| echo: true\n#| output: false\n#| code-line-numbers: \"8\"\n\nggplot(dem_summary, aes(x = reorder(region, -polyarchy), y = polyarchy)) +\n  geom_col(fill = \"steelblue\") + \n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    ) + theme_minimal()\n```\n\n## \n\nGives us a clean, elegant look. \n\n```{r}\n#| label: barchart12\n\nggplot(dem_summary, aes(x = reorder(region, -polyarchy), y = polyarchy)) +\n  geom_col(fill = \"steelblue\") + \n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    ) + theme_minimal()\n```\n\n\n##\n\n<br>\n\nNote that you can also save your plot as an object to modify later.\n\n<br>\n\n```{r}\n#| label: barchart13\n#| echo: true\n#| output: false\n\ndem_bar_chart <- ggplot(dem_summary, aes(x = reorder(region, -polyarchy), y = polyarchy)) +\n  geom_col(fill = \"steelblue\")\n```\n\n##\n\nWhich gives us...\n\n```{r}\n#| label: barchart14\n#| echo: true\n \ndem_bar_chart\n```\n\n## \n\n<br> \n\nNow let's add back our labels... \n\n<br>\n\n```{r}\n#| label: barchart15\n#| echo: true\n#| output: false\n\ndem_bar_chart <- dem_bar_chart +\n  labs(\n    x = \"Region\", \n    y = \"Avg. Polyarchy Score\", \n    title = \"Democracy by region, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )\n```\n\n##\n\nSo now we have... \n\n```{r}\n#| label: barchart16\n#| echo: true\n\ndem_bar_chart\n```\n\n## \n\n<br> \n\nAnd now we'll add back our theme...\n\n<br>\n\n```{r}\n#| label: barchart17\n#| echo: true\n#| output: false\n\ndem_bar_chart <- dem_bar_chart + theme_minimal()\n```\n\n##\n\nVoila! \n\n```{r}\n#| label: barchart18\n#| echo: true\n\ndem_bar_chart\n```\n\n##\n\nChange the theme. There are many [themes](https://ggplot2.tidyverse.org/reference/ggtheme.html) to choose from.\n\n```{r}\n#| label: barchart19\n#| echo: true\n\ndem_bar_chart + theme_bw()\n```\n\n## Your Turn!\n\n1. `glimpse()` the data\n2. Find a new variable to visualize\n3. Make a bar chart with it\n4. Change the [color](http://sape.inf.usi.ch/quick-reference/ggplot2/colour) of the bars\n5. Order the bars\n6. Add labels\n7. Add a [theme](https://ggplot2.tidyverse.org/reference/ggtheme.html)\n8. Try saving your plot as an object\n9. Then change the labels and/or theme\n\n```{r}\n#| label: timer2\ncountdown::countdown(minutes = 10, id = \"timer2\")\n```\n\n\n```{r}\n#| label: vdem_setup_2\n#| include: false\n\npolyarchy_annual <- vdem %>%\n  group_by(year) %>%\n  summarize(\n    polyarchy = mean(v2x_polyarchy, na.rm = TRUE),\n    gdp_pc = mean(e_gdppc, na.rm = TRUE)*1000\n  ) %>%\n  mutate(\n    wave = case_when(year <= 1827 ~ \"pre 1st wave\",\n                       year > 1827 & year <= 1926 ~ \"1st wave\", \n                       year > 1926 & year <= 1945 ~ \"1st rev. wave\",\n                       year > 1945 & year <= 1962 ~ \"2nd wave\", \n                       year > 1962 & year <= 1973 ~ \"2nd rev. wave\", \n                       year > 1973 & year <= 2010 ~ \"3rd wave\", \n                       year > 2010 ~ \"3rd rev. wave\") %>%\n      factor(levels = c(\"pre 1st wave\", \"1st wave\", \"1st rev. wave\",\n                        \"2nd wave\", \"2nd rev. wave\", \"3rd wave\", \"3rd rev. wave\"))\n  ) %>%\n  drop_na()\n```\n\n## Links to Classwork Folders\n\n- [Box](https://gwu.box.com/s/9xwaelyhv7uibtegxrgh80vgo7da10ie)\n- [Dropbox](https://www.dropbox.com/scl/fo/g4tdpdwcij78nyydvr4bp/h?rlkey=hctskhle6222csnwre5ir9gz3&dl=0)\n\n## Huntington's Three Waves\n\n```{r}\n#| label: huntington\nregion_plot <- ggplot(polyarchy_annual, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = wave)) + \n  geom_smooth(method = \"lm\", se = FALSE, size = .75) + \n  scale_x_log10(label = scales::label_dollar()) +\n  aes(label = year) +\n  labs(x= \"GDP Per Capita\", y = \"Polyarchy Score\",\n       title = \"Democracy, development and Huntington's three waves\") +\n  scale_color_discrete(name = \"Wave\")\n\nggplotly(region_plot, tooltip = c(\"year\", \"polyarchy\")) %>%   \n  # add source\n  layout(annotations = list(text = \"Source: The V-Dem Institute, Varities of Democracy Dataset\",  \n                            font = list(size = 10), showarrow = FALSE,\n                            xref = 'paper', x = 1, xanchor = 'right', xshift = 100,\n                            yref = 'paper', y = -.1, yanchor = 'auto', yshift = 0)) %>%\n  # add web address\n  layout(annotations = list(text = \"www.psc2339.com\", \n                            font = list(size = 10, color = 'grey'), showarrow = FALSE,\n                            xref = 'paper', x = .5, xanchor = 'center', xshift = 0,\n                            yref = 'paper', y = 1, yanchor = 'top', yshift = 0))\n```\n\n## Setup\n\n```{r}\n#| label: dem_waves_setup\n#| echo: true\n#| output: false\n\nlibrary(vdemdata)\nlibrary(tidyverse)\n\ndem_waves_ctrs <- vdem |>\n  select(\n    country = country_name,     \n    year, \n    polyarchy = v2x_polyarchy, \n  ) |>\n  filter( \n    country %in% c(\"United States of America\", # select countries in this list\n                   \"Japan\", \n                   \"Portugal\")\n    )\n\nwrite_csv(dem_waves_ctrs, \"data/dem_waves_ctrs.csv\")\n```\n\n```{r}\n#| label: exercise1_timer\ncountdown::countdown(minutes = 2, \n                     id = \"setup\", \n                     #bottom = \"10%\", \n                     #right = \"10%\",\n                     color_border = \"#fff\",\n                     color_text = \"#fff\",\n                     color_running_background = \"#42affa\",\n                     color_running_text = \"black\",\n                     color_finished_background = \"#E5D19D\",\n                     color_finished_text = \"#00264A\")\n```\n\n## Line Chart\n\n```{r}\n#| label: geom_line1\n\n# in this ggplot() call, we add a third dimension for line color\ndem_waves_chart <- ggplot(dem_waves_ctrs, aes(x = year, y = polyarchy, color = country)) +\n  geom_line(linewidth = 1) + # our geom is a line with a width of 1\n  labs(\n    x = \"Year\", \n    y = \"Polyarchy Score\", \n    title = 'Democracy in countries representing three different \"waves\"', \n    caption = \"Source: V-Dem Institute\", \n    color = \"Country\" # make title of legend to upper case\n  )\n\ndem_waves_chart\n```\n\n##\n\n<br>\n\nHere is the code... \n\n<br>\n\n```{r}\n#| label: geom_line2\n#| eval: false\n#| echo: true\n\n# in this ggplot() call, we add a third dimension for line color\nggplot(dem_waves_ctrs, aes(x = year, y = polyarchy, color = country)) +\n  geom_line(linewidth = 1) + # our geom is a line with a width of 1\n  labs(\n    x = \"Year\", \n    y = \"Polyarchy Score\", \n    title = 'Democracy in countries representing three different \"waves\"', \n    caption = \"Source: V-Dem Institute\", \n    color = \"Country\" # make title of legend to upper case\n  )\n```\n\n## \n\n<br>\n\nUse `geom_line()` to specify a line chart... \n\n<br>\n\n```{r}\n#| label: geom_line3\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"3\"\n\n# in this ggplot() call, we add a third dimension for line color\nggplot(dem_waves_ctrs, aes(x = year, y = polyarchy, color = country)) +\n  geom_line(linewidth = 1) + # our geom is a line with a width of 1\n  labs(\n    x = \"Year\", \n    y = \"Polyarchy Score\", \n    title = 'Democracy in countries representing three different \"waves\"', \n    caption = \"Source: V-Dem Institute\", \n    color = \"Country\" # make title of legend to upper case\n  )\n```\n\n## \n\n<br>\n\nAdd third dimension to the `aes()` call for line color...\n\n<br>\n\n```{r}\n#| label: geom_line4\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"2\"\n\n# in this ggplot() call, we add a third dimension for line color\nggplot(dem_waves_ctrs, aes(x = year, y = polyarchy, color = country)) +\n  geom_line(linewidth = 1) + # our geom is a line with a width of 1\n  labs(\n    x = \"Year\", \n    y = \"Polyarchy Score\", \n    title = 'Democracy in countries representing three different \"waves\"', \n    caption = \"Source: V-Dem Institute\", \n    color = \"Country\" # make title of legend to upper case\n  )\n```\n\n## \n\n<br>\n\nModify the legend title...\n\n<br>\n\n```{r}\n#| label: geom_line5\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"9\"\n\n# in this ggplot() call, we add a third dimension for line color\nggplot(dem_waves_ctrs, aes(x = year, y = polyarchy, color = country)) +\n  geom_line(linewidth = 1) + # our geom is a line with a width of 1\n  labs(\n    x = \"Year\", \n    y = \"Polyarchy Score\", \n    title = 'Democracy in countries representing three different \"waves\"', \n    caption = \"Source: V-Dem Institute\", \n    color = \"Country\" # make title of legend to upper case\n  )\n```\n\n## Problem\n\n```{r}\n#| label: cvd_plot\n\nlibrary(colorBlindness)\n\ncvdPlot(dem_waves_chart)\n```\n\n## Color Blindness\n\n<br>\n\n- Color Vision Deficiency (CVD) or color blindness affects 8 percent of men and 1 in 200 women\n- There are different types of CVD but most common is red-green color blindness\n- Therefore, don't include red and green in the same chart! \n- Look for color blind safe palettes\n\n## \n\n**Solution:** Use a colorblind safe color scheme like `viridis`...\n\n```{r}\n#| label: geom_line6\n\n# in this ggplot() call, we add a third dimension for line color\ndem_waves_viridis <- ggplot(dem_waves_ctrs, aes(x = year, y = polyarchy, color = country)) +\n  geom_line(linewidth = 1) + # our geom is a line with a width of 1\n  labs(\n    x = \"Year\", \n    y = \"Polyarchy Score\", \n    title = 'Democracy in countries representing three different \"waves\"', \n    caption = \"Source: V-Dem Institute\", \n    color = \"Country\" # make title of legend to upper case\n  ) +\n  scale_color_viridis_d(option = \"mako\", end = .8) # use viridis color palette\n\ndem_waves_viridis\n```\n\n##\n\n<br>\n\nUse `scale_color_viridis_d()` in this case to specify the viridis color scheme...\n\n```{r}\n#| label: geom_line7\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"11\"\n\n# in this ggplot() call, we add a third dimension for line color\nggplot(dem_waves_ctrs, aes(x = year, y = polyarchy, color = country)) +\n  geom_line(linewidth = 1) + # our geom is a line with a width of 1\n  labs(\n    x = \"Year\", \n    y = \"Polyarchy Score\", \n    title = 'Democracy in countries representing three different \"waves\"', \n    caption = \"Source: V-Dem Institute\", \n    color = \"Country\" # make title of legend to upper case\n  ) +\n  scale_color_viridis_d(option = \"mako\", end = .8) # use viridis color palette\n```\n\n## Better!\n\n```{r}\n#| label: cvdplot2\n\ncvdPlot(dem_waves_viridis)\n```\n\n## Palettes\n\n<br>\n\n- There are a number of viridis palettes\n- See [this reference](https://search.r-project.org/CRAN/refmans/viridisLite/html/viridis.html) to view different palettes and options\n- You can also use `scale_color_viridis_c()` to specify a continuous color scale \n- Also check out the [paletteer package](https://emilhvitfeldt.github.io/paletteer/) for easy access to many more palettes\n\n## Your Turn!\n\n<br>\n\n- See table three of [this article](https://kurzman.unc.edu/wp-content/uploads/sites/1410/2011/06/Kurzman_Waves_of_Democratization.pdf)\n- Select three countries to visualize\n- Adjust setup code to filter data on those countries \n- Visualize with `geom_line()`\n- Use `scale_color_viridis_d()` to specify a viridis color scheme\n\n```{r}\n#| label: scatterplot_timer\ncountdown::countdown(minutes = 10, \n                     id = \"scatter_plot_timer\", \n                     bottom = \"10%\", \n                     right = \"10%\")\n```\n\n## Scatter Plot Setup\n\n<br>\n\n```{r}\n#| label: scatter_plot_setup\n#| echo: true\n\ndem_summary_ctry <- read_csv(\"data/dem_women.csv\") |>\n  group_by(country, region) |> # group by country, keep region\n  summarize(\n    polyarchy = mean(polyarchy, na.rm = TRUE),\n    gdp_pc = mean(gdp_pc, na.rm = TRUE), \n    flfp = mean(flfp, na.rm = TRUE), \n    women_rep = mean(women_rep, na.rm = TRUE)\n  )\n```\n\n## Scatter Plot\n\n```{r}\n#| label: scatter1\n#| code-fold: true\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy, color = region, size = women_rep)) + \n  geom_point() + # use geom_point() for scatter plots\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\",\n    size = \"Women Reps\"\n    ) + \n  scale_color_viridis_d(option = \"inferno\", end = .8)\n```\n\n## Scatter Plot\n\n<br>\n\nUse `geom_point()`...\n\n```{r}\n#| label: scatter2\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"2\"\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy, color = region, size = women_rep)) +\n  geom_point() + # use geom_point() for scatter plots\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\",\n    size = \"Women Reps\"\n    ) +\n  scale_color_viridis_d(option = \"inferno\", end = .8)\n```\n\n## Scatter Plot\n\n<br>\n\nFour dimensions... \n\n```{r}\n#| label: scatter3\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"1-1\"\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy, color = region, size = women_rep)) + \n  geom_point() + # use geom_point() for scatter plots\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\",\n    size = \"Women Reps\"\n    ) +\n  scale_color_viridis_d(option = \"inferno\", end = .8)\n```\n\n## Scatter Plot\n\n<br>\n\nStretch axis on log scale and use `scales` package to adjust labels...\n\n```{r}\n#| label: scatter4\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"3\"\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy, color = region, size = women_rep)) + \n  geom_point() + # use geom_point() for scatter plots\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\",\n    size = \"Women Reps\"\n    ) +\n  scale_color_viridis_d(option = \"inferno\", end = .8)\n```\n\n\n## Scatter Plot\n\n<br>\n\nChange legend titles... \n\n```{r}\n#| label: scatter5\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"9-10\"\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy, color = region, size = women_rep)) + \n  geom_point() + # use geom_point() for scatter plots\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\",\n    size = \"Women Reps\"\n    ) +\n  scale_color_viridis_d(option = \"inferno\", end = .8)\n```\n\n## Your Turn! \n\n- There are four variables in `dem_summary_ctry`\n- Pick one related to women's empowerment\n- Visualize it on the y-axis with `gdp_pc` or `polyarchy` on the x-axis \n- Change labels and legend titles to match your visualization\n- Interpret your plot\n\n```{r}\n#|label: dem_waves_time\ncountdown::countdown(minutes = 5, \n                     id = \"women_emp\")\n```\n\n## Add a Trend Line\n\n```{r}\n#| label: trend_line1\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = region)) + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\"\n    ) +\n  scale_color_viridis_d(option = \"inferno\", end = .8)\n```\n\n## Add a Trend Line\n\n<br>\n\n```{r}\n#| label: trend_line2\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"3\"\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = region)) + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\"\n    ) +\n  scale_color_viridis_d(option = \"inferno\", end = .8)\n```\n\n## Add a Trend Line\n\n<br>\n\nTaking out size and adding color to `geom_point()` call...\n\n```{r}\n#| label: trend_line3\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"1-2\"\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = region)) + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\"\n    ) + \n  scale_color_viridis_d(option = \"inferno\", end = .8)\n```\n\n## Add a Trend Line\n\n<br>\n\nChanging legend titles...\n\n```{r}\n#| label: trend_line4\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"5-11\"\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = region)) + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\"\n    ) +\n  scale_color_viridis_d(option = \"inferno\", end = .8)\n```\n\n## Your Turn! \n\n<br>\n\n- Add a trendline to your plot\n- Change the labels accordingly\n- Try using `method = \"loess\"` instead of a \"lm\"\n\n```{r}\n#|label: trend_line_time\ncountdown::countdown(minutes = 5, \n                     id = \"trend\", \n                     bottom = \"10%\", \n                     right = \"10%\")\n```\n\n## Facet Wrapping\n\n```{r}\n#| label: facet_wrap0\n\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point() + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  facet_wrap(~ region) +\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )\n```\n\n## Facet Wrapping\n\n<br>\n\nUse `facet_wrap()` with `~` before variable you want to wrap on...\n\n```{r}\n#| label: facet_wrap1\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"4\"\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point() + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  facet_wrap(~ region) +\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )\n```\n\n## Facet Wrapping\n\n<br>\n\nWhat else changes? Back down to two dimensions...\n\n```{r}\n#| label: facet_wrap2\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"1-2\"\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point() + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  facet_wrap(~ region) +\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )\n```\n\n## Facet Wrapping\n\n<br>\n\nDon't forget to take the legend title out of the captions...\n\n```{r}\n#| label: facet_wrap3\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"6-11\"\nggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point() + \n  geom_smooth(method = \"lm\", linewidth = 1) + \n  facet_wrap(~ region) +\n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\"\n    )\n```\n\n## Your Turn!\n\n<br>\n\n- Facet wrap your scatter plot\n- Use `scales = \"free\"` in `facet_wrap` call to fix the West\n  - `facet_wrap(~ region, scales = \"free\")`\n\n```{r}\n#|label: facet_wrap_time\ncountdown::countdown(minutes = 5, \n                     id = \"facet\", \n                     bottom = \"10%\", \n                     right = \"10%\")\n```\n\n## Labeling Points\n\n```{r}\n#| label: geom_text1\ndem_summary_ctry |> \n  filter(region == \"Asia\") |>\n  ggplot(aes(x = gdp_pc, y = polyarchy)) + \n    geom_point() + \n    geom_text(aes(label = country), size = 2, vjust = 2) +\n    geom_smooth(method = \"lm\", linewidth = 1) +\n    scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n      labs(\n        x= \"GDP Per Capita\", \n        y = \"Polyarchy Score\",\n        title = \"Wealth and democracy in Asia, 1990 - present\", \n        caption = \"Source: V-Dem Institute\"\n        )\n```\n\n## Labeling Points\n\n<br>\n\nFilter for Asia, add labels with `geom_text()`...\n\n```{r}\n#| label: geom_text2\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"1-5\"\ndem_summary_ctry |> \n  filter(region == \"Asia\") |>\n  ggplot(aes(x = gdp_pc, y = polyarchy)) + \n    geom_point() + \n    geom_text(aes(label = country), size = 2, vjust = 2) +\n    geom_smooth(method = \"lm\", linewidth = 1) +\n    scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n      labs(\n        x= \"GDP Per Capita\", \n        y = \"Polyarchy Score\",\n        title = \"Wealth and democracy in Asia, 1990 - present\", \n        caption = \"Source: V-Dem Institute\"\n        )\n```\n\n## Your Turn!\n\n<br>\n\n- Filter for Asia or another region\n- Use `geom_text()` to add labels to your points\n- Play with `size` and `vjust` paramters \n\n```{r}\n#|label: label_time\ncountdown::countdown(minutes = 5, \n                     id = \"labels\", \n                     bottom = \"10%\", \n                     right = \"10%\")\n```\n\n## Make it Interactive\n\n```{r}\n#| label: plotly1\n\nlibrary(plotly)\n\nmodernization_plot <- ggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = region)) + \n  aes(label = country) +\n  geom_smooth(method = \"lm\", linewidth = 1) + \n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\"\n    ) +\n  scale_color_viridis_d(option = \"inferno\", end = .8)\n\nggplotly(modernization_plot, tooltip = c(\"country\", \"gdp_pc\", \"polyarchy\"))\n```\n\n##\n\n<br>\n\nUse `plotly` to make any plot interactive...\n\n```{r}\n#| label: plotly2\n#| echo: true\n#| eval: false\n#| code-line-numbers: \"|1|3|5|17\"\nlibrary(plotly)\n\nmodernization_plot <- ggplot(dem_summary_ctry, aes(x = gdp_pc, y = polyarchy)) + \n  geom_point(aes(color = region)) + \n  aes(label = country) +\n  geom_smooth(method = \"lm\", linewidth = 1) + \n  scale_x_log10(labels = scales::label_number(prefix = \"$\", suffix = \"k\")) +\n  labs(\n    x= \"GDP per Capita\", \n    y = \"Polyarchy Score\",\n    title = \"Wealth and democracy, 1990 - present\", \n    caption = \"Source: V-Dem Institute\", \n    color = \"Region\"\n    ) +\n  scale_color_viridis_d(option = \"inferno\", end = .8)\n\nggplotly(modernization_plot, tooltip = c(\"country\", \"gdp_pc\", \"polyarchy\"))\n```\n\n\n\n"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","output-file":"week-1.2.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.4.533","auto-stretch":true,"editor":"source","title":"Visualizing Data","date":"today","date-format":"long","footer":"[IAFF 6501 Website](https://quant4ia.rocks)","logo":"images/iaff6501-logo.png","theme":["simple","custom.scss"],"transition":"fade","slideNumber":true,"chalkboard":true}}},"projectFormats":["html"]}